<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.codenjoy</groupId>
    <artifactId>base-engine</artifactId>
    <version>1.0.20</version>

    <packaging>pom</packaging>

    <properties>
        <module.name>base</module.name>
        <java.version>1.7</java.version>
        <kotlin.version>1.0.5</kotlin.version>
        <groovy.version>2.4.1</groovy.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-lang.version>2.6</commons-lang.version>

        <fest-reflect.version>1.4.1</fest-reflect.version>
        <fest-assert.version>1.4</fest-assert.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>

        <groovy-compiler.version>1.5</groovy-compiler.version>
        <maven-compiler.version>3.5.1</maven-compiler.version>
        <maven-resources.version>2.7</maven-resources.version>
        <maven-antrun.version>1.8</maven-antrun.version>
        <maven-license.version>1.9</maven-license.version>

        <game.published>${project.build.directory}/published</game.published>
        <game.published.base>${game.published}/base</game.published.base>
        <game.published.client>${game.published}/client</game.published.client>
    </properties>

    <distributionManagement>
        <repository>
            <id>codenjoy-releases</id>
            <url>file://${project.build.directory}/staging/</url>
        </repository>
        <snapshotRepository>
            <id>codenjoy-snapshots</id>
            <url>file://${project.build.directory}/staging/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>codenjoy-releases</id>
            <url>https://github.com/the-viet-nguyen/codenjoy-repo/raw/master/snapshots</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>engine</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-assert</artifactId>
                <version>${fest-assert.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.easytesting</groupId>
                <artifactId>fest-reflect</artifactId>
                <version>${fest-reflect.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>scala-2.12</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <scalaVersion>2.12.0</scalaVersion>
                <scalaBinaryVersion>2.12</scalaBinaryVersion>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scalaVersion}</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-xml_${scalaBinaryVersion}</artifactId>
                    <version>1.0.6</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-parser-combinators_${scalaBinaryVersion}</artifactId>
                    <version>1.0.4</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-swing_${scalaBinaryVersion}</artifactId>
                    <version>2.0.0-M2</version>
                </dependency>
                <dependency>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib</artifactId>
                    <version>${kotlin.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <!-- any indy version of Groovy \>= 2.0.0-beta-3 should work here -->
                    <version>${groovy.version}</version>
                    <classifier>indy</classifier>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>scala-2.11</id>
            <properties>
                <scalaVersion>2.11.8</scalaVersion>
                <scalaBinaryVersion>2.11</scalaBinaryVersion>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scalaVersion}</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-xml_${scalaBinaryVersion}</artifactId>
                    <version>1.0.6</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-parser-combinators_${scalaBinaryVersion}</artifactId>
                    <version>1.0.4</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-swing_${scalaBinaryVersion}</artifactId>
                    <version>1.0.2</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>scala-2.10</id>
            <properties>
                <scalaVersion>2.10.6</scalaVersion>
                <scalaBinaryVersion>2.10</scalaBinaryVersion>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scalaVersion}</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-swing</artifactId>
                    <version>${scalaVersion}</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src</directory>
                <includes>
                    <include>license/**</include>
                </includes>
            </resource>
        </resources>
        <!-- To use the plugin goal in your POM or parent POM-->
        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>compile-scala-source</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>compile-scala-test</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
                        <arg>-nobootcp</arg>
                    </args>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>kotlin-maven-plugin</artifactId>
                <groupId>org.jetbrains.kotlin</groupId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <goals> <goal>compile</goal> </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/main/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals> <goal>test-compile</goal> </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
                                <sourceDir>${project.basedir}/src/test/java</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${groovy-compiler.version}</version>
                <configuration>
                    <invokeDynamic>true</invokeDynamic>
                    <sources>
                        <source>
                            <directory>${project.basedir}/src/main/groovy</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </source>
                    </sources>
                    <testSources>
                        <testSource>
                            <directory>${project.basedir}/src/test/groovy</directory>
                            <includes>
                                <include>**/*.groovy</include>
                            </includes>
                        </testSource>
                    </testSources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>addSources</goal>
                            <goal>addTestSources</goal>
                            <goal>generateStubs</goal>
                            <goal>compile</goal>
                            <goal>testGenerateStubs</goal>
                            <goal>testCompile</goal>
                            <goal>removeStubs</goal>
                            <goal>removeTestStubs</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler.version}</version>
                <configuration>
                    <encoding>utf8</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources.version}</version>
                <configuration>
                    <encoding>utf8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
                <executions>
                    <execution>
                        <id>copy-base</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${game.published.base}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../base</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-source</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${game.published.client}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>.</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <target>
                                <delete dir="libs" />
                                <copy file="../base/README.txt" tofile="README.txt" failonerror="false" />
                                <copy file="../base/src/main/resources/server.properties" todir="${game.published.client}" failonerror="false" />
                                <copy file="../engine/engine-${project.version}.jar" tofile="${game.published.client}/libs/engine-${project.version}.jar" failonerror="false" />
                                <copy file="../engine/engine-${project.version}-sources.jar" tofile="${game.published.client}/libs/engine-${project.version}-sources.jar" failonerror="false" />
                                <copy file="../engine/pom.xml" tofile="${game.published.client}/libs/pom.xml" failonerror="false" />
                                <copy file="../engine/setup.bat" tofile="${game.published.client}/libs/setup.bat" failonerror="false" />
                                <delete file="src/main/webapp/resources/user/${module.name}-servers.zip" />
                                <zip destfile="src/main/webapp/resources/user/${module.name}-servers.zip"
                                     basedir="${game.published}"
                                     includes="client/src/main/java/com/codenjoy/dojo/${module.name}/client/*.java,
                                               client/src/main/java/com/codenjoy/dojo/${module.name}/model/Elements.java,
                                               client/src/test/java/com/codenjoy/dojo/${module.name}/client/*.java,
                                               client/libs/*.*,
                                               client/README.txt,
                                               client/src/license/**,
                                               **/pom.xml,
                                               **/*.properties"
                                     excludes="client/src/main/java/com/codenjoy/dojo/${module.name}/client/ai/*,
                                               client/src/test/java/com/codenjoy/dojo/${module.name}/client/ai/*,
                                               **/target/**"
                                     update="true" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${maven-license.version}</version>
                <configuration>
                    <licenseName>gpl_v3</licenseName>
                    <licenseResolver>${project.baseUri}/src/license</licenseResolver>
                    <organizationName>Codenjoy</organizationName>
                    <projectName>Codenjoy - it's a dojo-like platform from developers to developers.</projectName>
                    <failOnMissingHeader>true</failOnMissingHeader>
                    <inceptionYear>2016</inceptionYear>
                    <canUpdateCopyright>false</canUpdateCopyright>
                    <canUpdateDescription>false</canUpdateDescription>
                    <canUpdateLicense>false</canUpdateLicense>
                </configuration>
                <executions>
                    <execution>
                        <id>first</id>
                        <goals>
                            <goal>update-file-header</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>